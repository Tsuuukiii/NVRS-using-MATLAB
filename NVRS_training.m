
 cd(fileparts(which('NVRS_training.m')));


tra = uicontrol( fig,'Style' ,'button',...
                            'String', 'Select',...
                            'Position', [20 20 100 60],...
                            'Callback', @traincustomPushed);

PushCtrl = uicontrol( fig,'Style' ,'button',...
                            'String', 'Select',...
                            'Position', [20 20 100 60],...
                            'Callback', @selectfolderPushed);
function selectfolderPushed(~, ~)

    dname = uigetdir("fileparts(which('NVRS_Train.mlapp'))");
            [~,name] = fileparts(dname);
            
   
end

function traincustomPushed(~)
       imds = imageDatastore('ToTrainCustom', ...
    'IncludeSubfolders',true, ...
    'LabelSource','foldernames');
[imdsTrain,imdsValidation] = splitEachLabel(imds,0.7,'randomized');
net = alexnet;
inputSize = net.Layers(1).InputSize
layersTransfer = net.Layers(1:end-3);
numClasses = numel(categories(imdsTrain.Labels))
layers = [
    layersTransfer
    fullyConnectedLayer(numClasses,'WeightLearnRateFactor',20,'BiasLearnRateFactor',20)
    softmaxLayer
    classificationLayer];
pixelRange = [-30 30];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange);
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, ...
    'DataAugmentation',imageAugmenter);
augimdsValidation = augmentedImageDatastore(inputSize(1:2),imdsValidation);
options = trainingOptions('sgdm', ...
    'MiniBatchSize',64, ...
    'MaxEpochs',20, ...
    'InitialLearnRate',1e-4, ...
    'Shuffle','every-epoch', ...
    'ValidationData',augimdsValidation, ...
    'ValidationFrequency',3, ...
    'Verbose',false, ...
    'plots',"training-progress");

customtrained = trainNetwork(augimdsTrain,layers,options);
[YPred,scores] = classify(customtrained,augimdsValidation);
YValidation = imdsValidation.Labels;
accuracy = mean(YPred == YValidation);
save customtrained;
end